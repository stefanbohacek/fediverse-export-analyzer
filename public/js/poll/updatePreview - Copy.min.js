const renderPoll=()=>{const t=document.getElementById("poll-data-type");var e=document.getElementById("poll-data-options"),l=document.getElementById("poll-preview");if(e.value&&e.value.length){const i={"single-choice":"checkbox","multiple-choice":"radio"};e=e.value.trim().split("\n").slice(0,100).filter(e=>e&&e.length).map((e,l)=>`
                    <div class="form-check">
                        <input
                            class="form-check-input"
                            type="${i[t.value]}"
                            name="poll-preview-options"
                            id="poll-preview-option-${l}"
                        >
                        <label
                            class="form-check-label"
                            for="poll-preview-option-${l}"
                        >
                            ${e}
                        </label>
                    </div>                        
              `).join("");l.innerHTML=e}else l.innerHTML=`<p class="card-text fst-italic">${l.dataset.placeholder}</p>`},updatePreview=(e,l,t)=>{console.log("update preview...",{"field.id":t.id,"field.value":t.value,field:t});var i=document.getElementById("poll-preview-title"),o=document.getElementById("poll-preview-description");switch(t.id){case"poll-data-title":t.value&&t.value.length?i.innerHTML=t.value.trim():i.innerHTML="My poll";break;case"poll-data-description":t.value&&t.value.length?o.innerHTML=t.value.split("\n").map(e=>`<p>${e.trim()}</p>`).join(""):o.innerHTML="Vote in my poll!";break;case"poll-data-options":case"poll-data-type":renderPoll()}};renderPoll();export default updatePreview;
//# sourceMappingURL=updatePreview - Copy.min.js.map
