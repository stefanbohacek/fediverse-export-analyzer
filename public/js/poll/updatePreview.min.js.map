{"version":3,"file":"updatePreview.min.js","sources":["poll/updatePreview.js"],"sourcesContent":["import renderPoll from './renderPoll.min.js';\r\nimport getPollOptions from './getPollOptions.min.js';\r\n\r\nconst pollElement = document.getElementById('poll');\r\nconst pollTypeElement = document.getElementById('poll-data-type');\r\nconst pollOptionsElement = document.getElementById('poll-data-options');\r\n\r\nconst updatePreview = (pollForm, pollPreview, field) => {\r\n    const pollPreviewTitle = document.getElementById('poll-title');\r\n    const pollPreviewDescription = document.getElementById('poll-description');\r\n\r\n    switch (field.id) {\r\n        case 'poll-data-title':\r\n            if (field.value && field.value.length){\r\n                pollPreviewTitle.innerHTML = field.value.trim();\r\n            } else {\r\n                pollPreviewTitle.innerHTML = 'My poll';\r\n            }\r\n            break;\r\n        case 'poll-data-description':\r\n            if (field.value && field.value.length){\r\n                const exp = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\r\n\r\n                pollPreviewDescription.innerHTML = field.value\r\n                    .split('\\n')\r\n                    .map(p => `<p>${p.trim()}</p>`)\r\n                    .join('')\r\n                    .replace(exp, '<a href=\"$1\" target=\"_blank\">$1</a>');\r\n            } else {\r\n                pollPreviewDescription.innerHTML = 'Vote in my poll!';\r\n            }\r\n            break;\r\n        case 'poll-data-options':\r\n        case 'poll-data-type':\r\n            renderPoll({\r\n                poll: pollElement,\r\n                type: pollTypeElement.value,\r\n                options: getPollOptions(pollOptionsElement)\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n};\r\n\r\nrenderPoll({\r\n    poll: pollElement,\r\n    type: pollTypeElement.value,\r\n    options: getPollOptions(pollOptionsElement)\r\n});\r\n\r\nexport default updatePreview;\r\n"],"names":["renderPoll","getPollOptions","pollElement","document","getElementById","pollTypeElement","pollOptionsElement","updatePreview","pollForm","pollPreview","field","exp","pollPreviewTitle","pollPreviewDescription","id","value","length","innerHTML","trim","split","map","p","join","replace","poll","type","options"],"mappings":"OAAOA,eAAgB,6BAChBC,mBAAoB,0BAE3B,MAAMC,YAAcC,SAASC,eAAe,MAAM,EAC5CC,gBAAkBF,SAASC,eAAe,gBAAgB,EAC1DE,mBAAqBH,SAASC,eAAe,mBAAmB,EAEhEG,cAAgB,CAACC,EAAUC,EAAaC,KAC1C,IAakBC,EAbZC,EAAmBT,SAASC,eAAe,YAAY,EACvDS,EAAyBV,SAASC,eAAe,kBAAkB,EAEzE,OAAQM,EAAMI,IACV,IAAK,kBACGJ,EAAMK,OAASL,EAAMK,MAAMC,OAC3BJ,EAAiBK,UAAYP,EAAMK,MAAMG,KAAK,EAE9CN,EAAiBK,UAAY,UAEjC,MACJ,IAAK,wBACGP,EAAMK,OAASL,EAAMK,MAAMC,QACrBL,EAAM,8EAEZE,EAAuBI,UAAYP,EAAMK,MACpCI,MAAM,IAAI,EACVC,IAAIC,SAAWA,EAAEH,KAAK,OAAO,EAC7BI,KAAK,EAAE,EACPC,QAAQZ,EAAK,qCAAqC,GAEvDE,EAAuBI,UAAY,mBAEvC,MACJ,IAAK,oBACL,IAAK,iBACDjB,WAAW,CACPwB,KAAMtB,YACNuB,KAAMpB,gBAAgBU,MACtBW,QAASzB,eAAeK,kBAAkB,CAC9C,CAAC,CAIT,CACJ,EAEAN,WAAW,CACPwB,KAAMtB,YACNuB,KAAMpB,gBAAgBU,MACtBW,QAASzB,eAAeK,kBAAkB,CAC9C,CAAC,iBAEcC"}